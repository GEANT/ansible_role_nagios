---
# tasks file for ansible_role_nagios
- name: Include distro/version specific tasks
  include_vars: "{{ ansible_distribution ~ ansible_distribution_major_version }}.yml"

- name: Ensure packages are available
  apt:
    name: "{{ nagios_packages }}"
    state: present
  tags: pkgs,nagios

- name: Ensure custom checks directory is available
  file:
    path: "{{ nagios_custom_checks_dir }}"
    state: directory
    owner: "{{ nagios_user }}"

- name: Ensure custom checks repositories are available
  git:
    repo: "{{ item.repo }}"
    dest: "{{ nagios_custom_checks_dir }}/{{ item.dest }}"
    force: yes
  with_items: "{{ nagios_checks_repos }}"
  when: nagios_checks_repos is defined

# Configure various server configuration files
- include_tasks: cfg_file.yml
  with_items: "{{ nagios_cfg }}"
  loop_control:
    loop_var: cfg_file
  when: nagios_cfg is defined
  tags: template,nagios

# We will managed this ourselves
- name: Ensure default localhost nagios configuration file is empty
  copy:
    dest: "{{ nagios_cfg_dir }}/objects/localhost.cfg"
    content: ""
  tags: template,nagios
  notify: reload_nagios

# Custom services, hosts, hostgroups, etc go here
- name: Ensure all-in-one custom configuration is available
  template:
    src: "{{ nagios_localconf_src }}"
    dest: "{{ nagios_cfg_dir }}/conf.d/local.cfg"
  tags: template,nagios
  notify: reload_nagios

- name: Ensure permission on Nagios pipe directory are correct
  file:
    path: "/var/lib/{{ _nagios }}"
    state: directory
    mode: '0751'
  notify: reload_nagios

- name: Ensure permission on Nagios pipe are correct
  file:
    path: "/var/lib/{{ _nagios }}/rw"
    state: directory
    mode: '2710'
  notify: reload_nagios

- name: Ensure shell script is available to force a check of all services
  template:
    src: force_checks.sh.j2
    dest: /root/force_checks.sh
    mode: '0755'
    owner: root
    group: root

- meta: flush_handlers

- name: Force a check of all services
  shell: /root/force_checks.sh
