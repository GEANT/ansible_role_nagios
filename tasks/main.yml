---
# tasks file for ansible_role_nagios
- name: Include distro/version specific tasks
  include_vars: "{{ ansible_distribution ~ ansible_distribution_major_version }}.yml"

- name: Ensure packages are available
  apt:
    name: "{{ nagios_packages }}"
    state: present
  tags: pkgs,nagios

#- name: Ensure {{ nagios_user }} account is configured
#  user:
#    name: "{{ nagios_user }}"
#    shell: /bin/bash
#    #  groups: www-data
#  tags: user,nagios

#- name: Ensure SSH public keys are available to the {{ nagios_user }} user
#  authorized_key:
#    user: "{{ nagios_user }}"
#    state: present
#    exclusive: true
#    key: "{{ nagios_pubkeys|sort|join('\n') }}"
#  tags: user
#  when: nagios_pubkeys

## This key will be used to sign in to remote hosts and run checks
#- name: Ensure SSH private key is available to the {{ nagios_user }} user
#  become: true
#  become_user: "{{ nagios_user }}"
#  copy:
#    content: "{{ nagios_privkey }}"
#    dest: ~/.ssh/id_rsa
#    mode: 0400
#  tags: user
#  when: nagios_privkey is defined

#- name: Ensure SSH configuration is available to the {{ nagios_user }} user
#  become: true
#  become_user: "{{ nagios_user }}"
#  template:
#    src: "{{ item }}"
#    dest: ~/.ssh/config
#  with_first_found:
#      - nagios_sshconf.j2
#      - _nagios_sshconf.j2
#  tags: ssh

- name: Ensure custom checks directory is available
  file:
    path: "{{ nagios_custom_checks_dir }}"
    state: directory
    owner: "{{ nagios_user }}"

- name: Ensure custom checks repositories are available
  git:
    repo: "{{ item.repo }}"
    dest: "{{ nagios_custom_checks_dir }}/{{ item.dest }}"
    force: yes
  with_items: "{{ nagios_checks_repos }}"
  when: nagios_checks_repos is defined

# Configure various server configurtion files
- include_tasks: cfg_file.yml
  with_items: "{{ nagios_cfg }}"
  loop_control:
    loop_var: cfg_file
  when: nagios_cfg is defined
  tags: template,nagios

# We do this ourselves
- name: Ensure default localhost nagios configuration file is not available
  file:
    dest: "{{ nagios_cfg_dir }}/conf.d/localhost_nagios2.cfg"
    state: absent
  tags: template,nagios
  notify: reload_nagios

# Custom services, hosts, hostgroups, etc go here
- name: Ensure all-in-one custom configuration is available
  template:
    src: "{{ item }}"
    dest: "{{ nagios_cfg_dir }}/conf.d/local.cfg"
  tags: template,nagios
  with_first_found:
    - nagios_localconf.j2
    - _nagios_localconf.j2
  notify: reload_nagios

- name: Ensure permission on Nagios pipe directory are correct
  file:
    path: "/var/lib/{{ _nagios }}"
    state: directory
    mode: '0751'
  notify: reload_nagios

- name: Ensure permission on Nagios pipe are correct
  file:
    path: "/var/lib/{{ _nagios }}/rw"
    state: directory
    mode: '2710'
  notify: reload_nagios